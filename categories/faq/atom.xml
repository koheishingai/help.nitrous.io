<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[faq | ]]></title>
  <link href="/categories/faq/atom.xml" rel="self"/>
  <link href="/"/>
  <updated>2013-07-10T22:54:12+00:00</updated>
  <id>/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="https://github.com/recurser/jekyll-plugins">Recurser</generator>

  
  <entry>
    <title type="html"><![CDATA[Run a static site with NodeJS]]></title>
    <link href="/node-connect-server"/>
    <updated>2013-06-28T00:00:00+00:00</updated>
    <id>/node-connect-server</id>
    <content type="html"><![CDATA[<p>Using the &#8220;connect&#8221; npm package, you can serve static files easily with node. Make sure the &#8220;connect&#8221; npm package is installed first by running:</p>

<pre><code>npm install connect</code></pre>

<p>and then use the following code:</p>

<pre><code>var connect = require(&#39;connect&#39;);
connect.createServer(connect.static(__dirname)).listen(3000);</code></pre>

<p>You can then run it by doing <code>node server.js</code> and your static files should be available at port 3000.</p>

<p>You can find shortcuts to your preview urls in the &#8220;Preview&#8221; menu at the top of the web IDE:</p>

<p><img alt='Preview Menu' src='https://raw.github.com/action-io/action-assets/master/support/screenshots/preview-menu.png' /></p>

<p>Or if you&#8217;re not using the Web IDE, you can find it in your Box details:</p>

<p><img alt='Preview URL' src='https://raw.github.com/action-io/action-assets/master/support/screenshots/box-preview-url.png' /></p>

<p>Of course, if you&#8217;re having trouble, you can always <a href='mailto:support@nitrous.io?subject=Node%20Server%20Issues'>talk to a real human</a>.</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Upload a directory via the Web IDE]]></title>
    <link href="/ide-upload-directory"/>
    <updated>2013-06-28T00:00:00+00:00</updated>
    <id>/ide-upload-directory</id>
    <content type="html"><![CDATA[<p>The File Upload/ide-file-uploads feature on the Web IDE is intended for individual files.</p>

<p>If you need to upload an entire directory, we suggest using either SFTP or Git. Another option you have, is to zip your application into an archive and then upload the zipped archive via the Web IDE upload.</p>

<p>First, zip up your project using your favorite archving application. On later versions of Mac OS X and Windows this is built in.</p>

<p><img alt='Compress' src='https://raw.github.com/action-io/action-assets/master/support/screenshots/compress-menu.png' /></p>

<p>Then, open up the IDE in your box on Nitrous.IO and below the file browser, click the &#8220;Upload Files&#8221; button.</p>

<p><img alt='IDE Upload' src='https://raw.github.com/action-io/action-assets/master/support/screenshots/ide-upload.png' /></p>
<p class='alert'>The file upload tool in the web IDE has a size limit of 20MB. If you have a large project, we suggest uploading the file via SFTP or Git</p>
<p>Once you have your archive uploaded, you&#8217;ll need to unzip it using the console. Click into the console and navigate to your directory:</p>

<pre><code>cd workspace</code></pre>

<p>Then unzip the package using the &#8220;unzip&#8221; command:</p>

<pre><code>unzip help-articles.zip</code></pre>
<p class='note'>Make sure you've moved the archive into the desired directory before unzipping.</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Problems previewing my application]]></title>
    <link href="/faq-localhost"/>
    <updated>2013-06-28T00:00:00+00:00</updated>
    <id>/faq-localhost</id>
    <content type="html"><![CDATA[<p>Due to the way we handle network configuration on boxes, you will not be able to bind http servers to localhost (127.0.0.1).</p>

<p>Your application will need to run on 0.0.0.0 or a specific IP address. Listening on port 3000 will allow you to use our preview menu for a shortcut.</p>

<h3 id='nodejs_example'>Node.js example</h3>

<p>Setting up a hello world web server on port 3000 using node.js.</p>
<pre class='prettyprint lang-javascript'>
  var http = require('http');
  http.createServer(function (req, res) {
    res.writeHead(200, {'Content-Type': 'text/plain'});
    res.end('Hello World\n');
  }).listen(3000, '0.0.0.0');
  console.log('Server running at http://0.0.0.0:3000/');
</pre>
<p>Then make sure to run your node server in the console (substitute your file name):</p>

<pre><code>node helloworld.js</code></pre>

<h3 id='python_example'>Python example</h3>

<p>When running a simple development server with <a href='https://docs.djangoproject.com/en/dev/intro/'>Django</a>, we recommend:</p>

<pre><code>python manage.py runserver 0.0.0.0:3000</code></pre>

<h3 id='python_on_google_app_engine'>Python on Google App Engine</h3>

<p>When running the development app server on <a href='https://developers.google.com/appengine/docs/python/gettingstarted/'>Google App Engine</a>, we recommend:</p>

<pre><code>devappserver.py --address=0.0.0.0 --port=3000</code></pre>

<h3 id='previewing_the_application'>Previewing the application</h3>

<p>We supply some sensible default ports to enable you to preview your work in the browser. You can get your preview link in 1 of 2 ways:</p>

<p>Launch the Web IDE for your box, click the &#8220;Preview&#8221; menu and select the port where your web server is running.</p>

<p><img alt='Preview Menu' src='https://raw.github.com/action-io/action-assets/master/support/screenshots/preview-menu.png' /></p>

<p>In your list of boxes, click the box name to toggle it&#8217;s details, copy the Preview URL and paste it in your browser. Change the port to 3000 or the applicable port where your server is running.</p>

<p><img alt='Box Preview URL' src='https://raw.github.com/action-io/action-assets/master/support/screenshots/box-preview-url.png' /></p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Server disconnects on browser close]]></title>
    <link href="/faq-disconnect"/>
    <updated>2013-06-28T00:00:00+00:00</updated>
    <id>/faq-disconnect</id>
    <content type="html"><![CDATA[<p>If you&#8217;re running a server or long-running process that you don&#8217;t want to interrupt when you mistakenly close your browser window, we suggest using a terminal multiplexer like <a href='http://www.gnu.org/software/screen/'>screen</a> or <a href='http://tmux.sourceforge.net/'>tmux</a> and creating a persistent session to which you can reconnect.</p>

<p>We pre-install tmux on all boxes, so you&#8217;re ready to go out of the gate. You can access tmux via the terminal in <a href='ide-general#console'>the Web IDE</a> or by <a href='/categories/ssh'>SSHing into your box</a>.</p>

<h3 id='getting_started_with_tmux'>Getting started with tmux</h3>

<p>At it&#8217;s core, tmux is made of <em>sessions</em> which contain any number of <em>windows</em> which can be split into <em>panes</em>. That&#8217;s pretty much it.</p>

<p><strong>Create a new Session</strong></p>

<p>In a Web IDE console window, you can create a new tmux session named &#8220;my_session&#8221; like so:</p>

<pre><code>tmux new -s my_session</code></pre>

<p><strong>List sessions</strong></p>

<pre><code>tmux ls</code></pre>

<p><strong>Attach to a session</strong></p>

<pre><code>tmux attach -t my_session</code></pre>

<p><strong>Detach a session</strong></p>

<pre><code>tmux detach</code></pre>

<p><strong>Create window</strong></p>

<pre><code>tmux new-window</code></pre>

<h3 id='navigating_tmux'>Navigating tmux</h3>

<p>The exact key bindings will depend on your operating system and keyboard setup. To see the current key bindings, type:</p>

<pre><code>tmux list-keys</code></pre>

<p>To get a list of tmux commands:</p>

<pre><code>tmux list-commands</code></pre>
<p class='alert'>
Note that navigating in tmux will take a bit of time to master. Switching windows and creating different pane layouts isn't as easy as dragging windows in a GUI so you'll want to customize your tmux configuration file (~/.tmux.conf).
</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Browser support]]></title>
    <link href="/faq-browser-support"/>
    <updated>2013-06-28T00:00:00+00:00</updated>
    <id>/faq-browser-support</id>
    <content type="html"><![CDATA[<h3 id='recommended_browsers'>Recommended Browsers</h3>

<p>We recommend that you use a modern web browser that support <a href='http://en.wikipedia.org/wiki/WebSocket'>websockets</a>. Our recommendations are:</p>

<ul>
<li><a href='https://www.google.com/intl/en/chrome/browser/'>Google Chrome</a></li>

<li><a href='http://www.mozilla.org/en-US/firefox/new/'>Mozilla Firefox</a></li>

<li><a href='http://www.opera.com/download/'>Opera</a></li>
</ul>

<h3 id='will_the_site_work_in_internet_explorer'>Will the site work in Internet Explorer?</h3>

<p>Nitrous.IO should function in Internet Explorer 10+, however we suggest that you use one of the recommended browsers listed above if possible.</p>]]></content>
  </entry>
  
</feed>